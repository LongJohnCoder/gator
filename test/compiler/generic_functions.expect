precision mediump float;int base(int x){return x;}mat4 anyt(mat4 x){return x;}mat3 anyt(mat3 x){return x;}mat2 anyt(mat2 x){return x;}vec4 anyt(vec4 x){return x;}vec3 anyt(vec3 x){return x;}vec2 anyt(vec2 x){return x;}float anyt(float x){return x;}int anyt(int x){return x;}bool anyt(bool x){return x;}mat4 general(mat4 x, mat4 y){return (x + y);}mat3 general(mat3 x, mat3 y){return (x + y);}mat2 general(mat2 x, mat2 y){return (x + y);}vec4 general(vec4 x, vec4 y){return (x + y);}vec3 general(vec3 x, vec3 y){return (x + y);}vec2 general(vec2 x, vec2 y){return (x + y);}float general(float x, float y){return (x + y);}int general(int x, int y){return (x + y);}mat4 mt(mat4 m1, mat4 m2, mat4 m3){mat4 first = (m1 + m2);mat4 second = (3. * m3);return first;}mat3 mt(mat3 m1, mat3 m2, mat4 m3){mat3 first = (m1 + m2);mat4 second = (3. * m3);return first;}mat2 mt(mat2 m1, mat2 m2, mat4 m3){mat2 first = (m1 + m2);mat4 second = (3. * m3);return first;}mat4 mt(mat4 m1, mat4 m2, mat3 m3){mat4 first = (m1 + m2);mat3 second = (3. * m3);return first;}mat3 mt(mat3 m1, mat3 m2, mat3 m3){mat3 first = (m1 + m2);mat3 second = (3. * m3);return first;}mat2 mt(mat2 m1, mat2 m2, mat3 m3){mat2 first = (m1 + m2);mat3 second = (3. * m3);return first;}mat4 mt(mat4 m1, mat4 m2, mat2 m3){mat4 first = (m1 + m2);mat2 second = (3. * m3);return first;}mat3 mt(mat3 m1, mat3 m2, mat2 m3){mat3 first = (m1 + m2);mat2 second = (3. * m3);return first;}mat2 mt(mat2 m1, mat2 m2, mat2 m3){mat2 first = (m1 + m2);mat2 second = (3. * m3);return first;}void main() {}