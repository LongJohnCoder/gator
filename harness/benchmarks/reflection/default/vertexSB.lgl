tag model is vec3;
space modelHom is vec4;
tag worldHom is vec4;
tag cameraHom is vec4;
tag projectiveHom is vec4;

attribute model aPosition;
uniform cameraHom->projectiveHom uProjection;
uniform worldHom->cameraHom uView;
uniform modelHom->worldHom uModel;
varying model vPosition;

void main() {
    model->modelHom model_modelHom = [
        [1., 0., 0.],
        [0., 1., 0.],
        [0., 0., 1.],
        [0., 0., 0.]
    ];

    vPosition = aPosition;
    projectiveHom gl_Position = uProjection * uView * uModel * (model_modelHom * aPosition + [0., 0., 0., 1.]);
}
