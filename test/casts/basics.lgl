tag a is vec<2>;
tag b is vec<3>;
tag c is vec<3>;

void main() {
    a avec = [1., 2.] in a; // This is fine, since upcasting is part of 'in' expressions (and is just the identity)
    b bvec = [1., 1., 1.];
    c cvec = [1., 2., 1.];

    canon a->b a_b = [[1., 2.], [2., 1.], [0., 1.]];
    canon b->c b_c = [[1., 2., 3.], [2., 1., 3.], [1., 1., 1.]];

    a s1 = avec in a; // = avec
    b s2 = avec in b; // = a_b * avec
    c s3 = bvec in c; // = b_c * bvec
    // = a->c __a_c = b_c * a_b; __a_c * avec
    // Note that this does involve code insertion for generating __a_c
    c s4 = avec in c;
    print s1;
    print s2;
    print s3;
    print s4;
}