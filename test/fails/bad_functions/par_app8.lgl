tag model is vec<3>;
tag world is vec<3>;
tag camera is vec<3>;
tag rot<`t : vec<n>> is vec<n>; // Rotated by 90 degrees counterclockwise around the z-axis as an example
tag dir<`t : vec<n>> is vec<n>;
tag hom<`t : vec<n>> is vec<n+1>;

declare dir<`t> normalize<`t : vec>(`t v);
declare vec4 vec4(vec<3> v, float f);
declare vec3 vec3(vec<4> v);
declare float dot<`t : vec>(dir<`t> v1, dir<`t> v2);

canon rot<`t> rotate<`t : vec<3>>(`t v) {
    `t->rot<`t> rotation_matrix = [[0., -1.], [1., 0.]]; // Should actually fail here, cause `t should be vec<3>
    return rotation_matrix * v; // Invalid matrix multiplication
}

void main() {
    print 1;
}