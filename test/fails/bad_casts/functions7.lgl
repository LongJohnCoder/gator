tag a is vec<2>;
tag b is vec<2>;
tag c is vec<3>;
tag d is vec<3>;

canon d _asd<`t : vec2>(`t v) {
    vec<2>->d m = [[1., 0.], [0., 1.], [0., 0.]];
    return m * v + [0., 0., 1.];
}

canon `t _collapse<`t : vec2>(d v) {
    d->`t m = [[1., 0., 0.], [0., 0., 1.]];
    return m * v; // we can't use 'in' cause we don't allow it for the abstract `t atm
}

void main() {
    a avec = [1., 1.];
    c fail = avec in c;  // no path cause c is vec3
}