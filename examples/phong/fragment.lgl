using "../glsl_defs.lgl";

// Reference Frame Declarations

frame model has dimension 3;
frame world has dimension 3;
frame camera has dimension 3;

// Global Variables
varying cart3.point<model> vPosition;
uniform hom.transformation<model, world> uModel;
uniform hom.transformation<world, camera> uView;
varying cart3.vector<model> vNormal;
uniform cart3.point<world> uLight;

void main() {
    color ambient = [.1, 0., 0.];
    color diffColor = [0.2, 0.8, 0.4];
    color specColor = [1.0, 1.0, 1.0];

    auto worldPos = hom_reduce(uModel*homify(vPosition));
    auto camPos = hom_reduce(uView*homify(worldPos));
    auto worldNorm = normalize(hom_reduce(uModel*homify(vNormal)));

    auto lightDir = normalize(uLight - worldPos);
    auto lightWorldDot = dot(lightDir, worldNorm);
    scalar diffuse = max(lightWorldDot, 0.);

    auto reflectDir = normalize(hom_reduce(uView * homify(reflect(-lightDir, worldNorm))));

    scalar specular = pow(max(dot(normalize(-camPos), reflectDir), 0.), 32.);

    vec4 gl_FragColor = vec4(ambient + diffuse * diffColor + specular * specColor, 1.0);
}